name: API Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: czechibank
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Generate Prisma Client
        run: npx prisma generate
      - name: Run database migrations
        run: npx prisma migrate deploy
      - name: Fill database with test data
        run: npm run fill:db
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/czechibank
      - name: Build application
        run: npm run build
      - name: Start application
        run: npm start &
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/czechibank
          SECRET_KEY: "test-secret-key-for-jwt-encryption"
          DISCORD_WEBHOOK_URL: "https://discord.com/api/webhooks/test"
      - name: Wait for application to start
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:3000/api/health | grep -q '"status":"ok"'; then
              echo "Application is ready!"
              exit 0
            fi
            echo "Waiting for application to start... ($i/30)"
            sleep 1
          done
          echo "Application failed to start"
          exit 1
      - name: Run API tests
        run: npm run test:api
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/czechibank
          SECRET_KEY: "test-secret-key-for-jwt-encryption"
          DISCORD_WEBHOOK_URL: "https://discord.com/api/webhooks/test"
