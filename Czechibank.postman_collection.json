{
  "info": {
    "_postman_id": "2012a2f3-1f2e-41e5-8379-5d857975aa01",
    "name": "Czechibank",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "2294419",
    "_collection_link": "https://czechitas-api-developers.postman.co/workspace/Czechitas~e9052594-972b-45e0-b6b0-7e7aff2f415f/collection/2294419-2012a2f3-1f2e-41e5-8379-5d857975aa01?action=share&source=collection_link&creator=2294419"
  },
  "item": [
    {
      "name": "/transactions?[query]",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "pm.test(\"Response has the required fields\", function () {",
              "    const responseData = pm.response.json();",
              "",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData.data).to.exist.and.to.be.an('object');",
              "    pm.expect(responseData.data.transactions).to.exist.and.to.be.an('array');",
              "});",
              "",
              "",
              "pm.test(\"Verify that the 'transactions' array is present and contains at least one element\", function () {",
              "  const responseData = pm.response.json();",
              "",
              "  pm.expect(responseData).to.be.an('object');",
              "  pm.expect(responseData.data.transactions).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/transactions?filterBy=createdAt&filterValue=2024-03-18&sortBy=createdAtt&sortOrder=asc",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "transactions"],
          "query": [
            {
              "key": "filterBy",
              "value": "createdAt"
            },
            {
              "key": "filterValue",
              "value": "2024-03-18"
            },
            {
              "key": "sortBy",
              "value": "createdAtt"
            },
            {
              "key": "sortOrder",
              "value": "asc"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "/bank-account/getAll",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 200\", function () {",
              "  pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "",
              "pm.test(\"Response has required fields\", function () {",
              "  const responseData = pm.response.json();",
              "  ",
              "  pm.expect(responseData).to.be.an('object');",
              "  pm.expect(responseData.data).to.exist.and.to.be.an('object');",
              "  pm.expect(responseData.data.bankAccount).to.exist.and.to.be.an('array');",
              "});",
              "",
              "",
              "pm.test(\"Response time is in an acceptable range\", function () {",
              "  pm.expect(pm.response.responseTime).to.be.below(500);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/bank-account/getAll",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "bank-account", "getAll"]
        }
      },
      "response": []
    },
    {
      "name": "/bank-account",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 200\", function () {",
              "  pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "",
              "pm.test(\"Bank account array is present and contains at least one element\", function () {",
              "  const responseData = pm.response.json();",
              "",
              "  pm.expect(responseData.data).to.be.an('object');",
              "  pm.expect(responseData.data.bankAccount).to.exist.and.to.be.an('array').and.to.have.lengthOf.at.least(1);",
              "});",
              "",
              "",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});",
              "",
              "pm.test(\"The response should have a valid JSON body\", function () {",
              "    pm.response.to.have.jsonBody();",
              "});",
              "",
              "pm.test(\"The response should have a 'data' property\", function () {",
              "    pm.expect(pm.response.json()).to.have.property('data');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/bank-account",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "bank-account"]
        }
      },
      "response": []
    },
    {
      "name": "/transactions/[id]",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 200\", function() {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "",
              "pm.test(\"The id should be a non-empty string\", function () {",
              "  const responseData = pm.response.json();",
              "",
              "  pm.expect(responseData.data.transaction.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
              "});",
              "",
              "",
              "pm.test(\"The amount should be a non-negative number\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData.data.transaction.amount).to.be.a('number').and.to.be.at.least(0);",
              "});",
              "",
              "",
              "pm.test(\"Currency is a non-empty string\", function () {",
              "  const responseData = pm.response.json();",
              "",
              "  pm.expect(responseData.data.transaction.currency).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Currency should not be empty\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/transactions/clt67g4h900154xzj5sprbguc",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "transactions", "clt67g4h900154xzj5sprbguc"]
        }
      },
      "response": []
    },
    {
      "name": "/transactions/create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "pm.test(\"Content-Type is application/json\", function () {",
              "  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
              "});",
              "",
              "",
              "pm.test(\"Validate the 'success' field in the response\", function () {",
              "  const responseData = pm.response.json();",
              "  ",
              "  pm.expect(responseData).to.be.an('object');",
              "  pm.expect(responseData.data.response.success).to.exist.and.to.be.a('boolean');",
              "});",
              "",
              "",
              "pm.test(\"Validate the 'message' field in the response\", function () {",
              "    const responseData = pm.response.json();",
              "",
              "    pm.expect(responseData.data.response.message).to.exist.and.to.be.a('string');",
              "});",
              "",
              "",
              "pm.test(\"Validate the 'transaction' object in the response\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData.data).to.exist.and.to.be.an('object');",
              "    pm.expect(responseData.data.response).to.exist.and.to.be.an('object');",
              "    pm.expect(responseData.data.response.data).to.exist.and.to.be.an('object');",
              "    pm.expect(responseData.data.response.data.transaction).to.exist.and.to.be.an('object');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"to\": \"55555555555/5555\",\n    \"amount\": 100\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3000/api/transactions/create",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "transactions", "create"]
        }
      },
      "response": []
    },
    {
      "name": "/user/create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "pm.test(\"Response has required fields - success and message\", function () {",
              "  const responseData = pm.response.json();",
              "  ",
              "  pm.expect(responseData).to.be.an('object');",
              "  pm.expect(responseData.success).to.exist;",
              "  pm.expect(responseData.message).to.exist;",
              "});",
              "",
              "",
              "pm.test(\"Success is a boolean value\", function () {",
              "  const responseData = pm.response.json();",
              "  ",
              "  pm.expect(responseData.success).to.be.a('boolean');",
              "});",
              "",
              "",
              "pm.test(\"Message is a non-empty string\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
              "});",
              "",
              "",
              "pm.test(\"Content-Type is set to application/json\", function () {",
              "  pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"cssasc@csc.cz\",\n    \"name\": \"Pepa Lavicka\",\n    \"password\": \"s123123123123\",\n    \"sex\": \"MALE\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3000/api/user/create",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "user", "create"]
        }
      },
      "response": []
    },
    {
      "name": "/user/",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/api/user/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "user", ""]
        }
      },
      "response": []
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "mkr8vzzx92",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ]
}
